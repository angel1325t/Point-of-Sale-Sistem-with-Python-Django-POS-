"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os
from pathlib import Path
from dotenv import load_dotenv
import stripe

# Cargar variables desde el archivo .env
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
# Seguridad
SECRET_KEY = os.getenv("SECRET_KEY", "default-secret-key")
DEBUG = os.getenv("DEBUG", "False").lower() == "true"
ALLOWED_HOSTS = os.getenv("ALLOWED_HOSTS", "localhost").split(",")

# Configuración de Stripe
STRIPE_PUBLIC_KEY = os.getenv("STRIPE_PUBLIC_KEY", "")
STRIPE_SECRET_KEY = os.getenv("STRIPE_SECRET_KEY", "")

stripe.api_key = STRIPE_SECRET_KEY  # Configura la clave secreta

# Application definition

INSTALLED_APPS = [
    "jazzmin",
    "django.contrib.admin",
    'django.contrib.sites',
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "apps.users",
    "apps.productos",
    "apps.ventas",
    "django_extensions",
    'widget_tweaks',
]
SITE_ID = 1

JAZZMIN_SETTINGS = {
    "site_logo": "img/P.png",
    "site_icon": "imgs/favicon.png",
    "welcome_sign": "Bienvenido al panel de administración",
    "copyright": "PuntoXpress",
    "topmenu_links": [
        {
            "name": "Soporte",
            "url": "https://github.com/farridav/django-jazzmin/issues",
            "new_window": True,
        },
        {"name": "Usuarios", "model": "users.CustomUser"},
        {
            "name": "Empleados",
            "url": "/empleados/",
            "new_window": False,  # Se abrirá en la misma ventana
        },
    ],
    "search_model": ["users.CustomUser"],
    "site_brand": "PuntoXpress",
    "language_chooser": True,
    "icons": {
        "users.CustomUser": "fas fa-user",
        "ventas.venta": "fas fa-chart-column",
        "productos.categoria": "fas fa-boxes-stacked",
        "productos.producto": "fas fa-tag",
        "productos.suministradores": "fas fa-user-tag",
        "auth.group": "fas fa-gears",
    },
    "custom_css": "admin/css/custom.css",
}


JAZZMIN_UI_TWEAKS = {
    "theme": "darkly",
    "navbar": "navbar-dark",  # Cambia la barra superior a oscuro
    "dark_mode_theme": "darkly",  # Confirma el tema oscuro
}


MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.locale.LocaleMiddleware",  # Middleware para la localización
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "apps.users.middlewares.ErrorLoggingMiddleware",
]


ROOT_URLCONF = "config.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, "templates")],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "config.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases
DATABASES = {
    "default": {
        "ENGINE": os.getenv("DB_ENGINE", "django.db.backends.mysql"),
        "NAME": os.getenv("DB_NAME", "proyecto_final"),
        "USER": os.getenv("DB_USER", "root"),
        "PASSWORD": os.getenv("DB_PASSWORD", ""),
        "HOST": os.getenv("DB_HOST", "localhost"),
        "PORT": os.getenv("DB_PORT", ""),
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'es'
USE_I18N = True
USE_L10N = True
USE_TZ = True

LANGUAGES = [
    ("en", "English"),
    ("es", "Español"),
]

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "static/"

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]
STATIC_ROOT = BASE_DIR / "staticfiles"


MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(BASE_DIR, "media")

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


LOGIN_REDIRECT_URL = "empleados"
LOGOUT_REDIRECT_URL = "/login"
LOGIN_URL = "/login"
PASSWORD_RESET_TIMEOUT = 3600  # Opcional: Expira en 1 hora


EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'angelalexanderperezmartinez47@gmail.com'
EMAIL_HOST_PASSWORD = 'mgvo xklt hpfh vpas'
DEFAULT_FROM_EMAIL = 'angelalexanderperezmartinez47@gmail.com'

HUNTER_API_KEY = "70180b1a15e6904ef2d1314ca055ce27a0e28718"

AUTH_USER_MODEL = "users.CustomUser"
